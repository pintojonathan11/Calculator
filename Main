import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Calculator extends JFrame implements ActionListener{
	private static final long serialVersionUID = 1L;
	String t = "";
	String[][] arr = new String[][]{{"CE", "C", "pow", "%"}, 
											{"7","8","9","/"},
											{"4","5","6","*"},
											{"1","2","3","-"},
											{"0",".","=","+"}};
	
	JTextField sol;	
	double cal;
	int count,c;
	double temp;
	
	public static void main(String[] args) {
		new Calculator().setVisible(true);
		
	}
	public Calculator() {
		super("Calculator");
		setSize(600, 600);
		setResizable(false);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		JPanel text = new JPanel(new FlowLayout());
		JPanel panel = new JPanel(new GridLayout(5,4,4,5));

		
		sol = new JTextField(t,100);
		text.add(sol);
									
		for(int i=0;i<arr.length;i++) {
			for(int j=0;j<arr[0].length;j++) {
				JButton btn = new JButton(String.valueOf(arr[i][j]));
			    btn.setPreferredSize(new Dimension(200, 200));
			    btn.setFont(new Font("Arial", Font.PLAIN, 60));
			    panel.add(btn);
			    btn.addActionListener(actions);
			}
		}
		sol.setPreferredSize(new Dimension(200, 200));
		sol.setEditable(false);
		add(text, BorderLayout.NORTH);
		add(panel, BorderLayout.SOUTH);
		pack();
		setVisible(true);
		
		
		
		
	}
	private ActionListener actions = new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			String name = e.getActionCommand();
			if(name!= arr[0][0] && name!= arr[0][1] && name!= arr[0][2] && name!= arr[0][3] && name!= arr[1][3]&& name!= arr[2][3]&& name!= arr[3][3] && name!= arr[4][3]&& name!= arr[4][2]){
				
				t= sol.getText();
				t+= name;
				sol.setText(t);
				sol.setFont(new Font("Arial", Font.PLAIN, 100));
			}
			
			else {
				cal=Double.parseDouble(sol.getText());
				t = "";
				sol.setText("");
				if(c==0) {
					setTemp(cal);
				}
				if(c==1 && name!=arr[4][2]) {
					setTemp(math(cal));
				}
				
				else if(name==arr[0][0]||name==arr[0][1]) {
					cal=0;
					setTemp(0);
				}
				else if(name==arr[0][2]) {
					count=2;
					c=1;
				}
				else if(name==arr[0][3]) {
					count=3;
					c=1;
				}
				else if(name==arr[1][3]) {
					count=13;
					c=1;
				}
				else if(name==arr[2][3]) {
					count=23;
					c=1;
				}
				else if(name==arr[3][3]) {
					count=33;
					c=1;
				}
				else if(name==arr[4][3]) {
					count=43;
					c=1;
				}
				else if(c==1 && name == arr[4][2]) {
					t= Double.toString(math(cal));
					sol.setText(t);
					c=0;
				}
				
			}
			
		}
	};
	public void setTemp(double t) {
		temp= t;
	}
	public double getTemp() {
		return temp;
	}
	public double math(double fin) {
		
		if(count==2) {
			fin =Math.pow(temp, fin);
		}
		if(count==3) {
			fin =(temp/100)*fin;
		}
		if(count==13) {
			fin =temp/fin;
		}
		if(count==23) {
			fin =temp*fin;
		}
		if(count==33) {
			fin =temp-fin;
		}
		if(count==43) {
			fin =temp+fin;
		}
		return fin;
		
	}
}

